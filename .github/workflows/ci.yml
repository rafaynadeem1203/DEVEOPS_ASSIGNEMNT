name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-fe:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t rafaynadeem1203/frontend:${{ github.sha }} -f frontend/Dockerfile .
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push rafaynadeem1203/frontend:${{ github.sha }}

  build-be:
    name: Build Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t rafaynadeem1203/backend:${{ github.sha }} -f backend/Dockerfile .
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push rafaynadeem1203/backend:${{ github.sha }}
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          cd backend
          npm install

      - name: Run Unit Tests
        run: |
          cd backend
          npm test -- --json --outputFile=test-report.json

      - name: Publish Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: backend/test-report.json

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          cd frontend
          npm install

      - name: Run Linter
        run: |
          cd frontend
          npm run lint

  sast:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run SAST
        run: |
          docker run --rm -v $(pwd):/src aquasec/trivy fs /src
